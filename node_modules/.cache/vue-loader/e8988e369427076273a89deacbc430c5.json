{"remainingRequest":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jessicahorton/Desktop/movie-vuex-practice/src/views/menububble.vue?vue&type=style&index=0&id=27ea1ec5&scoped=true&lang=css&","dependencies":[{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/src/views/menububble.vue","mtime":1586380621845},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/css-loader/dist/cjs.js","mtime":1584047906476},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584627459735},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/postcss-loader/src/index.js","mtime":1584032648342},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":1584034832218},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/index.js","mtime":1584627459735}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWRpdG9yIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJvcmRlcjogd2hpdGUgMXB4IHNvbGlkOwogICAgd2lkdGg6IDgwJTsKICAgIG1hcmdpbjogMCBhdXRvOwp9Ci5tZW51YnViYmxlIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgZGlzcGxheTogZmxleDsKICBiYWNrZ3JvdW5kOiAkY29sb3ItYmxhY2s7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIHBhZGRpbmc6IDAuM3JlbTsKICBtYXJnaW4tYm90dG9tOiAwLjVyZW07CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOwogIHZpc2liaWxpdHk6IGhpZGRlbjsKICBvcGFjaXR5OiAwOwogIHotaW5kZXg6MTAwOwogIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycywgdmlzaWJpbGl0eSAwLjJzOwp9Cg=="},{"version":3,"sources":["menububble.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"menububble.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"editor\">\n        <editor-menu-bubble :editor=\"editor\" :keep-in-bounds=\"keepInBounds\" v-slot=\"{ commands, isActive, menu }\">\n            <div class=\"menububble\"\n                :class=\"{ 'is-active': menu.isActive }\"\n                :style=\"`left: ${menu.left}px; bottom: ${menu.bottom}px;`\"\n            >\n            <!--- Bold Menu Button --->\n                <button\n                    :class=\"{ 'is-active': isActive.bold() }\"\n                    class=\"menububble__button\"\n                    @click=\"commands.bold\"\n                    >\n                    <img\n                        class=\"hover\"\n                        src=\"@/components/Icon/code.svg\">\n                </button>\n\n                <!--- Italics Menu Button --->\n                <button\n                    :class=\"{ 'is-active': isActive.bold() }\"\n                    class=\"menububble__button\"\n                    @click=\"commands.bold\"\n                    >\n                    <img\n                        class=\"hover\"\n                        src=\"@/components/Icon/italic.svg\">\n                </button>\n\n                <!--- Code Menu Button --->\n                <button\n                    :class=\"{ 'is-active': isActive.bold() }\"\n                    class=\"menububble__button\"\n                    @click=\"commands.bold\"\n                    >\n                    <img\n                        class=\"hover\"\n                        src=\"@/components/Icon/bold.svg\">\n                </button>\n            </div>\n        </editor-menu-bubble>\n        <editor-content class=\"editor__content\" :editor=\"editor\" />\n    </div>\n</template>\n<script>\nimport { Editor, EditorContent, EditorMenuBubble } from 'tiptap';\n\nimport {\n  Blockquote,\n  BulletList,\n  CodeBlock,\n  HardBreak,\n  Heading,\n  ListItem,\n  OrderedList,\n  TodoItem,\n  TodoList,\n  Bold,\n  Code,\n  Italic,\n  Link,\n  Strike,\n  Underline,\n  History,\n} from 'tiptap-extensions'\n\nexport default {\ncomponents: {\n    EditorContent,\n    EditorMenuBubble,\n},\ndata() {\n    return {\n        keepInBounds: true,\n        editor: new Editor({\n            extensions: [\n            new Blockquote(),\n            new BulletList(),\n            new CodeBlock(),\n            new HardBreak(),\n            new Heading({ levels: [1, 2, 3] }),\n            new ListItem(),\n            new OrderedList(),\n            new TodoItem(),\n            new TodoList(),\n            new Link(),\n            new Bold(),\n            new Code(),\n            new Italic(),\n            new Strike(),\n            new Underline(),\n            new History(),\n            ],\n        content: `\n          <div>\n            Hey, try to select some text here. There will popup a menu for selecting some inline styles. <em>Remember:</em> you have full control about content and styling of this menu.\n          </div>\n        `,\n      }),\n    }\n  },\n  beforeDestroy() {\n    this.editor.destroy()\n  },\n}\n</script>\n<!-- <template>\n//   <div class=\"editor\">\n//     <editor-menu-bubble :editor=\"editor\" :keep-in-bounds=\"keepInBounds\" v-slot=\"{ commands, isActive, menu }\">\n//       <div\n//         class=\"menububble\"\n//         :class=\"{ 'is-active': menu.isActive }\"\n//         :style=\"`left: ${menu.left}px; bottom: ${menu.bottom}px;`\"\n//       >\n\n//         <button\n//           class=\"menububble__button\"\n//           :class=\"{ 'is-active': isActive.bold() }\"\n//           @click=\"commands.bold\"\n//         >\n//           <icon name=\"bold\" />\n//         </button>\n\n//         <button\n//           class=\"menububble__button\"\n//           :class=\"{ 'is-active': isActive.italic() }\"\n//           @click=\"commands.italic\"\n//         >\n//           <icon name=\"italic\" />\n//         </button>\n\n//         <button\n//           class=\"menububble__button\"\n//           :class=\"{ 'is-active': isActive.code() }\"\n//           @click=\"commands.code\"\n//         >\n//           <icon name=\"code\" />\n//         </button>\n\n//       </div>\n//     </editor-menu-bubble>\n\n//     <editor-content class=\"editor__content\" :editor=\"editor\" />\n//   </div>\n// </template>\n\n// <script>\n// import Icon from 'Components/Icon'\n\n// import {\n//   Blockquote,\n//   BulletList,\n//   CodeBlock,\n//   HardBreak,\n//   Heading,\n//   ListItem,\n//   OrderedList,\n//   TodoItem,\n//   TodoList,\n//   Bold,\n//   Code,\n//   Italic,\n//   Link,\n//   Strike,\n//   Underline,\n//   History,\n// } from 'tiptap-extensions'\n// export default {\n//   components: {\n//     EditorContent,\n//     EditorMenuBubble,\n//     Icon,\n//   },\n//   data() {\n//     return {\n//       keepInBounds: true,\n//       editor: new Editor({\n//         extensions: [\n//           new Blockquote(),\n//           new BulletList(),\n//           new CodeBlock(),\n//           new HardBreak(),\n//           new Heading({ levels: [1, 2, 3] }),\n//           new ListItem(),\n//           new OrderedList(),\n//           new TodoItem(),\n//           new TodoList(),\n//           new Link(),\n//           new Bold(),\n//           new Code(),\n//           new Italic(),\n//           new Strike(),\n//           new Underline(),\n//           new History(),\n//         ],\n//         content: `\n//           <h2>\n//             Menu Bubble\n//           </h2>\n//           <p>\n//             Hey, try to select some text here. There will popup a menu for selecting some inline styles. <em>Remember:</em> you have full control about content and styling of this menu.\n//           </p>\n//         `,\n//       }),\n//     }\n//   },\n//   beforeDestroy() {\n//     this.editor.destroy()\n//   },\n// }\n// </script> -->\n<style scoped>\n.editor {\n    color: white;\n    border: white 1px solid;\n    width: 80%;\n    margin: 0 auto;\n}\n.menububble {\n  position: absolute;\n  display: flex;\n  background: $color-black;\n  border-radius: 5px;\n  padding: 0.3rem;\n  margin-bottom: 0.5rem;\n  transform: translateX(-50%);\n  visibility: hidden;\n  opacity: 0;\n  z-index:100;\n  transition: opacity 0.2s, visibility 0.2s;\n}\n</style>\n"]}]}