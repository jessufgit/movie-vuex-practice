{"remainingRequest":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jessicahorton/Desktop/movie-vuex-practice/src/views/dragalicious.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/src/views/dragalicious.vue","mtime":1586371465464},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/css-loader/dist/cjs.js","mtime":1584047906476},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584627459735},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/postcss-loader/src/index.js","mtime":1584032648342},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/sass-loader/dist/cjs.js","mtime":1584047904830},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":1584034832218},{"path":"/Users/jessicahorton/Desktop/movie-vuex-practice/node_modules/vue-loader/lib/index.js","mtime":1584627459735}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCltkYXRhLXR5cGU9ImRyYWdfaXRlbSJdIHsKICBkaXNwbGF5OiBmbGV4OwogIHBhZGRpbmc6IDAuNXJlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGJsYWNrLCAwLjA1KTsKICBtYXJnaW4tYm90dG9tOiAwLjVyZW07CiAgYm9yZGVyLXJhZGl1czogNnB4OwogID4gOmZpcnN0LWNoaWxkIHsKICAgIGZsZXg6IDEgMSBhdXRvOwogIH0KICA+IDpsYXN0LWNoaWxkIHsKICAgIGZsZXg6IDAgMCBhdXRvOwogICAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgICBjdXJzb3I6IG1vdmU7CiAgfQp9Ci5jb2xvckZpeCB7CiAgICBjb2xvcjogd2hpdGU7Cn0K"},{"version":3,"sources":["dragalicious.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dragalicious.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"editor\">\n    Scrumpy Drag:<editor-content class=\"editor__content\" :editor=\"editor\" />\n  </div>\n</template>\n\n<script>\nimport { Editor, EditorContent } from 'tiptap'\nimport { Heading, Code } from 'tiptap-extensions'\nimport MovieListItem from '../components/MovieListItem'\nexport default {\n  components: {\n    EditorContent,\n  },\n  data() {\n    return {\n      editor: new Editor({\n        extensions: [\n          new Heading(),\n          new Code(),\n          new MovieListItem(),\n        ],\n        content: `\n          <h2 class=\"colorFix>\n            Drag Handle\n          </h2>\n          <p>\n            Add <code>data-drag-handle</code> to a DOM element within your node view to define your custom drag handle.\n          </p>\n          <div data-type=\"drag_item\">\n            Drag me!\n          </div>\n          <div data-type=\"drag_item\">\n            Try it!\n          </div>\n          <div data-type=\"drag_item\">\n            It works!\n          </div>\n        `,\n      }),\n    }\n  },\n  beforeDestroy() {\n    this.editor.destroy()\n  },\n}\n</script>\n\n<style lang=\"scss\">\n[data-type=\"drag_item\"] {\n  display: flex;\n  padding: 0.5rem;\n  background-color: rgba(black, 0.05);\n  margin-bottom: 0.5rem;\n  border-radius: 6px;\n  > :first-child {\n    flex: 1 1 auto;\n  }\n  > :last-child {\n    flex: 0 0 auto;\n    margin-left: auto;\n    cursor: move;\n  }\n}\n.colorFix {\n    color: white;\n}\n</style>\n"]}]}